parameter_meta:
  diaproteomics.samplesheet:
    description: Input sample sheet (containing path and meta data of raw or mzML
      files)
    group: input_output_options
    help: 'Use this to specify a sample sheet table including your input raw or mzml
      files as well as their metainformation such as BatchID, MSstats_Condition and
      MSstats_BioReplicate (of note: the BioReplicate column is optional). For example:


      | Sample   | BatchID      | MSstats_Condition  | MSstats_BioReplicate |   Spectra_Filepath                      |

      | -----|:------------:| ----------:|----------:|------------------------------------------:|

      | 1    | MelanomaStudy |      Malignant     |  BioReplicate1  |   data/Melanoma_DIA_standard_rep1.raw    |

      | 2    | MelanomaStudy |      Malignant     |  BioReplicate1  |   data/Melanoma_DIA_standard_rep2.raw    |

      | 3    | MelanomaStudy |      Benign     |  BioReplicate2  |   data/SkinTissue_DIA_standard_rep1.raw    |

      | 4    | MelanomaStudy |      Benign     |  BioReplicate2  |   data/SkinTissue_DIA_standard_rep2.raw    |

      | 5    | BreastCancerStudy |      Malignant     |  BioReplicate1  |   data/BreastCancer_DIA_standard_rep1.raw    |

      | 6    | BreastCancerStudy |      Malignant     |  BioReplicate1  |   data/BreastCancer_DIA_standard_rep2.raw    |

      | 7    | BreastCancerStudy |      Benign     |  BioReplicate2  |   data/BreastTissue_DIA_standard_rep1.raw    |

      | 8    | BreastCancerStudy |      Benign     |  BioReplicate2  |   data/BreastTissue_DIA_standard_rep2.raw    |'
    hidden: false
  diaproteomics.input_spectral_library:
    description: Input sample sheet of spectral libraries (tsv, pqp, TraML)
    group: input_output_options
    help: 'Use this to specify a sample sheet table including your input spectral
      library files as well as their metainformation such as BatchID and MSstats_Condition.
      For example:


      | Sample   | BatchID      |   Library_Filepath                       |

      | -----|:------------:|------------------------------------------:|

      | 1    | MelanomaStudy |   data/Melanoma_library.tsv    |

      | 2    | BreastCancerStudy |   data/BraCa_library.tsv    |'
    hidden: false
  diaproteomics.irts:
    description: Path to internal retention time standard sample sheet (tsv, pqp,
      TraML)
    group: input_output_options
    help: 'Use this to specify a sample sheet table including your input internal
      retention time spectral library files as well as their metainformation such
      as BatchID and MSstats_Condition. For example:


      | Sample      | BatchID      |   irt_Filepath                       |

      | -----|:------------:|------------------------------------------:|

      | 1    | MelanomaStudy |   data/Melanoma_irt_library.tsv    |

      | 2    | BreastCancerStudy |   data/BraCa_irt_library.tsv    |'
    hidden: false
  diaproteomics.outdir:
    description: The output directory where the results will be saved.
    group: input_output_options
    help: ''
    hidden: false
  diaproteomics.email:
    description: Email address for completion summary.
    group: input_output_options
    help: Set this parameter to your e-mail address to get a summary e-mail with details
      of the run sent to you when the workflow exits. If set in your user config file
      (`~/.nextflow/config`) then you don't need to specify this on the command line
      for every run.
    hidden: false
  diaproteomics.generate_spectral_library:
    description: Set this flag if the spectral library should be generated using EasyPQP
      from provided DDA data - identification search results and corresponding raw
      data.
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.input_sheet_dda:
    description: Input sample sheet to use for library generation eg. DDA raw data
      (mzML) and DDA identification data (pepXML, mzid, idXML)
    group: spectral_library_generation
    help: 'Use this to specify a sample sheet table including your input DDA raw or
      mzml files as well as their corresponding peptide identification files and  BatchID
      metainformation. For example:


      | Sample   | BatchID      | Spectra_Filepath  |   Id_Filepath                       |

      | -----|:------------:| ----------:|------------------------------------------:|

      | 1    | MelanomaStudy |      data/Melanoma_DDA_rep1.mzML     |   data/Melanoma_DDA_rep1.pepXML    |

      | 2    | MelanomaStudy |      data/Melanoma_DDA_rep2.mzML     |   data/Melanoma_DDA_rep2.pepXML    |

      | 3    | BreastCancerStudy |      data/BraCa_DDA_rep1.mzML     |   data/BraCa_DDA_rep1.pepXML    |

      | 4    | BreastCancerStudy |      data/BraCa_DDA_rep2.mzML     |   data/BraCa_DDA_rep2.pepXML    |

      '
    hidden: false
  diaproteomics.library_rt_fdr:
    description: PSM fdr threshold to align peptide ids with reference run.
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.min_transitions:
    description: Minimum number of transitions for assay
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.max_transitions:
    description: Maximum number of transitions for assay
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.decoy_method:
    description: Method for generating decoys
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.skip_decoy_generation:
    description: Set this flag if using a spectral library that already includes decoy
      sequences and therefor skip assay and decoy generation.
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.unimod:
    description: Path to unimod file needs to be provided
    group: spectral_library_generation
    help: 'Example file:

      https://raw.githubusercontent.com/nf-core/test-datasets/diaproteomics/unimod.xml'
    hidden: false
  diaproteomics.skip_dia_processing:
    description: Set this flag if you only want to generate spectral libraries from
      DDA data
    group: spectral_library_generation
    help: ''
    hidden: false
  diaproteomics.generate_pseudo_irts:
    description: Set this flag if pseudo internal retention time standards should
      be generated using EasyPQP from provided DDA data - identification search results
      and corresponding raw data.
    group: pseudo_irt_generation
    help: ''
    hidden: false
  diaproteomics.n_irts:
    description: Number of pseudo irts selected from dda identifications based on
      the best q-value
    group: pseudo_irt_generation
    help: ''
    hidden: false
  diaproteomics.irts_from_outer_quantiles:
    description: Set this flag if pseudo irts should be selected from the 1st and
      4th RT quantile only
    group: pseudo_irt_generation
    help: ''
    hidden: false
  diaproteomics.merge_libraries:
    description: Set this flag if the libraries defined in the input or by generation
      should be merged according to the BatchID
    group: spectral_library_merging
    help: ''
    hidden: false
  diaproteomics.align_libraries:
    description: Set this flag if pairwise RT alignment should be applied to libraries
      when merging.
    group: spectral_library_rt_alignment
    help: ''
    hidden: false
  diaproteomics.min_overlap_for_merging:
    description: Minimum number of peptides to compute RT alignment during pairwise
      merging of libraries
    group: spectral_library_rt_alignment
    help: ''
    hidden: false
  diaproteomics.mz_extraction_window:
    description: Mass tolerance for transition extraction (ppm)
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.mz_extraction_window_unit:
    description: Unit for mz window
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.mz_extraction_window_ms1:
    description: Mass tolerance for precursor transition extraction (ppm)
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.mz_extraction_window_ms1_unit:
    description: Unit for mz window
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.rt_extraction_window:
    description: RT window for transition extraction (seconds)
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.irt_min_rsq:
    description: Minimal random mean squared error for irt RT alignment
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.irt_n_bins:
    description: Number of bins defined for the RT Normalization
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.irt_min_bins_covered:
    description: Number of bins that have to be covered for the RT Normalization
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.irt_alignment_method:
    description: Method for irt RT alignment for example
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.force_option:
    description: Force the analysis of the OpenSwathWorkflow despite severe warnings
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.use_ms1:
    description: Whether to use ms1 information for scoring and extraction
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.min_upper_edge_dist:
    description: Minimal distance to the upper edge of a Swath window to still consider
      a precursor, in Thomson
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.cache_option:
    description: Set mode whether to work in memory or to store data as cache first
    group: dia_spectral_library_search
    help: ''
    hidden: false
  diaproteomics.pyprophet_classifier:
    description: Machine learning classifier used for pyprophet target / decoy separation
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_fdr_ms_level:
    description: MS Level of pyprophet FDR calculation
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_global_fdr_level:
    description: Abstraction level of pyrophet FDR calculation
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_peakgroup_fdr:
    description: Threshold for pyprophet FDR filtering on peakgroup abstraction level
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_peptide_fdr:
    description: Threshold for pyprophet FDR filtering on peptide abstraction level
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_protein_fdr:
    description: Threshold for pyprophet FDR filtering on protein abstraction level
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_pi0_start:
    description: Start for pyprophet non-parametric pi0 estimation
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_pi0_end:
    description: End for pyprophet non-parametric pi0 estimation
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.pyprophet_pi0_steps:
    description: Steps for pyprophet non-parametric pi0 estimation
    group: false_discovery_rate_estimation
    help: ''
    hidden: false
  diaproteomics.dialignr_global_align_fdr:
    description: 'DIAlignR global alignment FDR threshold: After the chromatogram
      alignment all peaks should still satisfy the global alignment FDR threshold.'
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.dialignr_analyte_fdr:
    description: 'DIAlignR analyte FDR threshold: Before the chromatogram alignment
      only peaks satisfying this threshold will be matched across runs.'
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.dialignr_unalign_fdr:
    description: 'DIAlignR unalignment FDR threshold: XICs below this threshold will
      be considered valid without any alignment.'
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.dialignr_align_fdr:
    description: 'DIAlignR alignment FDR threshold: After the chromatogram alignment
      aligned peaks should satisfy this threshold.'
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.dialignr_query_fdr:
    description: 'DIAlignR query FDR threshold: During the chromatogram alignment
      only peaks satisfying this maximum FDR threshold will be considered as potential
      matches.'
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.dialignr_xicfilter:
    description: DIAlignR XICfilter parameter
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.dialignr_parallelization:
    description: Whether DIAlignR should be executed using multithreading (may cause
      errors)
    group: ms2_chromatogram_alignment
    help: ''
    hidden: false
  diaproteomics.run_msstats:
    description: Set this flag if statistical normalization and visualizations should
      be generated using MSstats
    group: output_summary
    help: ''
    hidden: false
  diaproteomics.generate_plots:
    description: Set this flag if output plots should be generated.
    group: output_summary
    help: '1) BarChartProtein/Peptide Counts

      2) Pie Chart: Peptide Charge distribution

      3) Density Scatter: Library vs run RT deviations for all identifications

      4) Heatmap: Peptide quantities across MS runs

      5) Pyprophet score plots


      In addition MSstats will run and export comparative protein statistics plots
      such as Volcano plots if protein level is specified.'
    hidden: false
  diaproteomics.mztab_export:
    description: 'Optional mzTab export (Warning: the mzTab format is not yet well
      supported for DIA)'
    group: output_summary
    help: ''
    hidden: false
  diaproteomics.help:
    description: Display help text.
    group: generic_options
    help: ''
    hidden: true
  diaproteomics.publish_dir_mode:
    description: Method used to save pipeline results to output directory.
    group: generic_options
    help: The Nextflow `publishDir` option specifies which intermediate files should
      be saved to the output directory. This option tells the pipeline what method
      should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir)
      for details.
    hidden: true
  diaproteomics.validate_params:
    description: Boolean whether to validate parameters against the schema at runtime
    group: generic_options
    help: ''
    hidden: true
  diaproteomics.email_on_fail:
    description: Email address for completion summary, only when pipeline fails.
    group: generic_options
    help: This works exactly as with `--email`, except emails are only sent if the
      workflow is not successful.
    hidden: true
  diaproteomics.plaintext_email:
    description: Send plain-text email instead of HTML.
    group: generic_options
    help: Set to receive plain-text e-mails instead of HTML formatted.
    hidden: true
  diaproteomics.monochrome_logs:
    description: Do not use coloured log outputs.
    group: generic_options
    help: Set to disable colourful command line output and live life in monochrome.
    hidden: true
  diaproteomics.tracedir:
    description: Directory to keep pipeline Nextflow logs and reports.
    group: generic_options
    help: ''
    hidden: true
  diaproteomics.show_hidden_params:
    description: Show all params when using `--help`
    group: generic_options
    help: By default, parameters set as _hidden_ in the schema are not shown on the
      command line when a user runs with `--help`. Specifying this option will tell
      the pipeline to show all parameters.
    hidden: true
  diaproteomics.max_cpus:
    description: Maximum number of CPUs that can be requested    for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the CPU requirement for each process. Should
      be an integer e.g. `--max_cpus 1`
    hidden: true
  diaproteomics.max_memory:
    description: Maximum amount of memory that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the memory requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_memory '8.GB'`
    hidden: true
  diaproteomics.max_time:
    description: Maximum amount of time that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the time requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_time '2.h'`
    hidden: true
  diaproteomics.custom_config_version:
    description: Git commit id for Institutional configs.
    group: institutional_config_options
    help: 'Provide git commit id for custom Institutional configs hosted at `nf-core/configs`.
      This was implemented for reproducibility purposes. Default: `master`.


      ```bash

      ## Download and use config file with following git commit id

      --custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96

      ```'
    hidden: true
  diaproteomics.custom_config_base:
    description: Base directory for Institutional configs.
    group: institutional_config_options
    help: 'If you''re running offline, nextflow will not be able to fetch the institutional
      config files from the internet. If you don''t need them, then this is not a
      problem. If you do need them, you should download the files from the repo and
      tell nextflow where to find them with the `custom_config_base` option. For example:


      ```bash

      ## Download and unzip the config files

      cd /path/to/my/configs

      wget https://github.com/nf-core/configs/archive/master.zip

      unzip master.zip


      ## Run the pipeline

      cd /path/to/my/data

      nextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/

      ```


      > Note that the nf-core/tools helper package has a `download` command to download
      all required pipeline files + singularity containers + institutional configs
      in one go for you, to make this process easier.'
    hidden: true
  diaproteomics.hostnames:
    description: Institutional configs hostname.
    group: institutional_config_options
    help: ''
    hidden: true
  diaproteomics.config_profile_name:
    description: Institutional config name.
    group: institutional_config_options
    help: ''
    hidden: true
  diaproteomics.config_profile_description:
    description: Institutional config description.
    group: institutional_config_options
    help: ''
    hidden: true
  diaproteomics.config_profile_contact:
    description: Institutional config contact information.
    group: institutional_config_options
    help: ''
    hidden: true
  diaproteomics.config_profile_url:
    description: Institutional config URL link.
    group: institutional_config_options
    help: ''
    hidden: true
parameter_group:
  input_output_options:
    description: Define where the pipeline should find input data and save output
      data.
    help: null
    title: Input/output options
  spectral_library_generation:
    description: ''
    help: null
    title: Spectral library generation
  pseudo_irt_generation:
    description: ''
    help: null
    title: Pseudo iRT generation
  spectral_library_merging:
    description: ''
    help: null
    title: Spectral library merging
  spectral_library_rt_alignment:
    description: ''
    help: null
    title: Spectral library RT alignment
  dia_spectral_library_search:
    description: ''
    help: null
    title: DIA spectral library search
  false_discovery_rate_estimation:
    description: ''
    help: null
    title: False discovery rate estimation
  ms2_chromatogram_alignment:
    description: ''
    help: null
    title: MS2 chromatogram alignment
  output_summary:
    description: ''
    help: null
    title: Output summary
  generic_options:
    description: Less common options for the pipeline, typically set in a config file.
    help: 'These options are common to all nf-core pipelines and allow you to customise
      some of the core preferences for how the pipeline runs.


      Typically these options would be set in a Nextflow config file loaded for all
      pipeline runs, such as `~/.nextflow/config`.'
    title: Generic options
  max_job_request_options:
    description: Set the top limit for requested resources for any single job.
    help: 'If you are running on a smaller system, a pipeline step requesting more
      resources than are available may cause the Nextflow to stop the run with an
      error. These options allow you to cap the maximum resources requested by any
      single job so that the pipeline will run on your system.


      Note that you can not _increase_ the resources requested by any job using these
      options. For that you will need your own configuration file. See [the nf-core
      website](https://nf-co.re/usage/configuration) for details.'
    title: Max job request options
  institutional_config_options:
    description: Parameters used to describe centralised config profiles. These should
      not be edited.
    help: The centralised nf-core configuration profiles use a handful of pipeline
      parameters to describe themselves. This information is then printed to the Nextflow
      log when you run a pipeline. You should not need to change these values when
      you run a pipeline.
    title: Institutional config options
